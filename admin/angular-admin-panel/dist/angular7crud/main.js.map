{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/business.service.ts","webpack:///./src/app/gst-add/gst-add.component.css","webpack:///./src/app/gst-add/gst-add.component.html","webpack:///./src/app/gst-add/gst-add.component.ts","webpack:///./src/app/gst-edit/gst-edit.component.css","webpack:///./src/app/gst-edit/gst-edit.component.html","webpack:///./src/app/gst-edit/gst-edit.component.ts","webpack:///./src/app/gst-get/gst-get.component.css","webpack:///./src/app/gst-get/gst-get.component.html","webpack:///./src/app/gst-get/gst-get.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACO;AACG;AACH;AAE9D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,0EAAe;KAC3B;IACD;QACE,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAE,6EAAgB;KAC5B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,0EAAe;KAC3B;CACF,CAAC;AAOF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAL5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OAEW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1B7B,qBAAqB,wBAAwB,GAAG,KAAK,yBAAyB,GAAG,6CAA6C,+U;;;;;;;;;;;ACA9H,0HAA0H,qCAAqC,0EAA0E,2BAA2B,iBAAiB,2kB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnO;AACS;AACD;AAOlB;AAOxC;IAME,sBAAoB,WAAkC,EAAU,OAAe,EAAS,EAAmB;QAA3G,iBAIC;QAJmB,gBAAW,GAAX,WAAW,CAAuB;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAiB;QAF3G,UAAK,GAAG,cAAc,CAAC;QAGrB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAY;YACzC,KAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,EAAE;aACJ,UAAU,EAAE;aACZ,SAAS,CAAC,UAAC,IAAI;YACd,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACO,4CAAqB,GAA7B,UAA8B,KAAY;QACxC,IAAI,KAAK,YAAY,+DAAe,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SAC1B;QACD,IAAI,KAAK,YAAY,6DAAa,EAAE;YAClC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;SAC7B;QACD,IAAI,KAAK,YAAY,gEAAgB,EAAE;YACrC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,IAAI,KAAK,YAAY,+DAAe,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;SACzB;IACH,CAAC;IAjCU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAOiC,0EAAqB,EAAmB,sDAAM,EAAa,qEAAe;OANhG,YAAY,CAkCxB;IAAD,mBAAC;CAAA;AAlCwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBiC;AACjB;AAEe;AACH;AACG;AACI;AAEb;AACe;AACA;AACG;AAEZ;AAmBrD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,0EAAe;gBACf,0EAAe;gBACf,6EAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,yEAAoB;gBACpB,kEAAmB;gBACnB,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAE,kEAAe,CAAE;YAC9B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AChCqB;AACO;AAKlD;IAKE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,QAAG,GAAG,WAAW,CAAC;QAClB,eAAU,GAAG,aAAa,CAAC;IAEa,CAAC;IAEzC,qCAAW,GAAX,UAAY,WAAW,EAAE,aAAa,EAAE,mBAAmB;QACzD,IAAM,GAAG,GAAG;YACV,WAAW,EAAE,WAAW;YACxB,aAAa,EAAE,aAAa;YAC5B,mBAAmB,EAAE,mBAAmB;SACzC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,GAAG,CAAC;aACjC,SAAS,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAnB,CAAmB,CAAC,CAAC;IAC7C,CAAC;IAED,uCAAa,GAAb;QACE,OAAO,IAAI;aACH,IAAI;aACJ,GAAG,CAAC,KAAG,IAAI,CAAC,GAAK,CAAC,CAAC;IAC7B,CAAC;IAED,oCAAU,GAAV;QACE,OAAO,IAAI;aACH,IAAI;aACJ,GAAG,CAAC,KAAG,IAAI,CAAC,UAAY,CAAC,CAAC;IACpC,CAAC;IAED,sCAAY,GAAZ,UAAa,EAAE;QACb,OAAO,IAAI;aACF,IAAI;aACJ,GAAG,CAAI,IAAI,CAAC,GAAG,cAAS,EAAI,CAAC,CAAC;IACvC,CAAC;IAEH,wCAAc,GAAd,UAAe,WAAW,EAAE,aAAa,EAAE,mBAAmB,EAAE,EAAE;QAEhE,IAAM,GAAG,GAAG;YACR,WAAW,EAAE,WAAW;YACxB,aAAa,EAAE,aAAa;YAC5B,mBAAmB,EAAE,mBAAmB;SACzC,CAAC;QACJ,IAAI;aACD,IAAI;aACJ,IAAI,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,GAAG,CAAC;aACrC,SAAS,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAnB,CAAmB,CAAC,CAAC;IAC3C,CAAC;IAEF,wCAAc,GAAd,UAAe,EAAE;QACd,OAAO,IAAI;aACA,IAAI;aACJ,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IAC7C,CAAC;IApDU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,+DAAU;OALzB,eAAe,CAqD3B;IAAD,sBAAC;CAAA;AArD2B;;;;;;;;;;;;ACN5B,+DAA+D,+I;;;;;;;;;;;ACA/D,khE;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACoB;AAChB;AAOtD;IAGE,yBAAoB,EAAe,EAAU,EAAmB;QAA5C,OAAE,GAAF,EAAE,CAAa;QAAU,OAAE,GAAF,EAAE,CAAiB;QAC9D,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oCAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACvC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACzC,mBAAmB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SAChD,CAAC,CAAC;IACL,CAAC;IAED,qCAAW,GAAX,UAAY,WAAW,EAAE,YAAY,EAAE,mBAAmB;QACxD,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,EAAE,YAAY,EAAE,mBAAmB,CAAC,CAAC;IACtE,CAAC;IAED,kCAAQ,GAAR;IACA,CAAC;IApBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAIwB,0DAAW,EAAc,iEAAe;OAHrD,eAAe,CAsB3B;IAAD,sBAAC;CAAA;AAtB2B;;;;;;;;;;;;ACT5B,+DAA+D,mJ;;;;;;;;;;;ACA/D,ooE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AACa;AAChB;AAOtD;IAKE,0BAAoB,KAAqB,EAC/B,MAAc,EACd,EAAmB,EACnB,EAAe;QAHL,UAAK,GAAL,KAAK,CAAgB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAiB;QACnB,OAAE,GAAF,EAAE,CAAa;QALzB,aAAQ,GAAQ,EAAE,CAAC;QAMf,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAEJ,qCAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzB,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACvC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACzC,mBAAmB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SAChD,CAAC,CAAC;IACL,CAAC;IAGH,mCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC9C,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAc,GAAd,UAAe,WAAW,EAAE,aAAa,EAAE,mBAAmB;QAA9D,iBAKD;QAJE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC/B,KAAI,CAAC,EAAE,CAAC,cAAc,CAAC,WAAW,EAAE,aAAa,EAAE,mBAAmB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACtF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACN,CAAC;IAlCY,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAM2B,8DAAc;YACvB,sDAAM;YACV,iEAAe;YACf,0DAAW;OARd,gBAAgB,CAmC5B;IAAD,uBAAC;CAAA;AAnC4B;;;;;;;;;;;;ACV7B,+DAA+D,+I;;;;;;;;;;;ACA/D,ySAAyS,wBAAwB,uBAAuB,0BAA0B,uBAAuB,gCAAgC,iP;;;;;;;;;;;;;;;;;;;;;;;;;ACAvX;AAEI;AAOtD;IAIE,yBAAoB,EAAmB;QAAnB,OAAE,GAAF,EAAE,CAAiB;IAAI,CAAC;IAE5C,kCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,EAAE;aACJ,aAAa,EAAE;aACf,SAAS,CAAC,UAAC,IAAgB;YAC1B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAc,GAAd,UAAe,EAAE;QACf,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACtC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAlBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAKwB,iEAAe;OAJ5B,eAAe,CAoB3B;IAAD,sBAAC;CAAA;AApB2B;;;;;;;;;;;;;ACT5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GstAddComponent } from './gst-add/gst-add.component';\nimport { GstEditComponent } from './gst-edit/gst-edit.component';\nimport { GstGetComponent } from './gst-get/gst-get.component';\n\nconst routes: Routes = [\n  {\n    path: 'business/create',\n    component: GstAddComponent\n  },\n  {\n    path: 'business/edit/:id',\n    component: GstEditComponent\n  },\n  {\n    path: 'business',\n    component: GstGetComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"h1{\\n    text-align:center;\\n}\\nh2{\\n    text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7Q0FDckI7QUFDRDtJQUNJLG1CQUFtQjtDQUN0QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDF7XG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XG59XG5oMntcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\"","module.exports = \"<ng2-slim-loading-bar color=\\\"blue\\\"></ng2-slim-loading-bar>\\n<body style=\\\"background-color:powderblue;\\\">\\n<h1 style=\\\"font-family:verdana;\\\"> Welcome to Azure Devops Demo!  </h1>\\n<h2 style=\\\"font-family:courier;\\\"> Build version number {{version.version}} </h2>\\n</body>\\n<!-- <nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"business/create\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          Create Business\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"business\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          Business\\n        </a>\\n      </li> \\n    </ul>\\n  </div>\\n</nav> -->\\n<br />\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {SlimLoadingBarService} from 'ng2-slim-loading-bar';\nimport { BusinessService } from '../app/business.service';\n\nimport { NavigationCancel,\n        Event,\n        NavigationEnd,\n        NavigationError,\n        NavigationStart,\n        Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  \n\n  title = 'angular-admin-panel';\n  version;\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router,private bs: BusinessService) {\n    this._router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n\n  ngOnInit() {\n    this.bs\n      .getVersion()\n      .subscribe((data) => {\n        this.version = data;\n        console.log(this.version)\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\n\nimport { AppComponent } from './app.component';\nimport { GstAddComponent } from './gst-add/gst-add.component';\nimport { GstGetComponent } from './gst-get/gst-get.component';\nimport { GstEditComponent } from './gst-edit/gst-edit.component';\n\nimport { BusinessService } from './business.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GstAddComponent,\n    GstGetComponent,\n    GstEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SlimLoadingBarModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [ BusinessService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusinessService {\n\n  uri = '/business';\n  versionuri = '/getversion';\n\n  constructor(private http: HttpClient) { }\n\n  addBusiness(person_name, business_name, business_gst_number) {\n    const obj = {\n      person_name: person_name,\n      business_name: business_name,\n      business_gst_number: business_gst_number\n    };\n    this.http.post(`${this.uri}/add`, obj)\n        .subscribe(res => console.log('Done'));\n  }\n\n  getBusinesses() {\n    return this\n           .http\n           .get(`${this.uri}`);\n  }\n\n  getVersion() {\n    return this\n           .http\n           .get(`${this.versionuri}`);\n  }\n\n  editBusiness(id) {\n    return this\n            .http\n            .get(`${this.uri}/edit/${id}`);\n    }\n\n  updateBusiness(person_name, business_name, business_gst_number, id) {\n\n    const obj = {\n        person_name: person_name,\n        business_name: business_name,\n        business_gst_number: business_gst_number\n      };\n    this\n      .http\n      .post(`${this.uri}/update/${id}`, obj)\n      .subscribe(res => console.log('Done'));\n  }\n\n deleteBusiness(id) {\n    return this\n              .http\n              .get(`${this.uri}/delete/${id}`);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dzdC1hZGQvZ3N0LWFkZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Person Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"person_name\\\" #person_name/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['person_name'].invalid && (angForm.controls['person_name'].dirty || angForm.controls['person_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['person_name'].errors.required\\\">\\n          Person Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Business Name </label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"business_name\\\" #business_name />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['business_name'].invalid && (angForm.controls['business_name'].dirty || angForm.controls['business_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['business_name'].errors.required\\\">\\n          Person Business is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Business GST Number </label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"business_gst_number\\\" #business_gst_number />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['business_gst_number'].invalid && (angForm.controls['business_gst_number'].dirty || angForm.controls['business_gst_number'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['business_gst_number'].errors.required\\\">\\n          Business GST Number is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"addBusiness(person_name.value, business_name.value, business_gst_number.value)\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\" \\n        class=\\\"btn btn-primary\\\">Add Business</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BusinessService } from '../business.service';\n\n@Component({\n  selector: 'app-gst-add',\n  templateUrl: './gst-add.component.html',\n  styleUrls: ['./gst-add.component.css']\n})\nexport class GstAddComponent implements OnInit {\n\n  angForm: FormGroup;\n  constructor(private fb: FormBuilder, private bs: BusinessService) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      person_name: ['', Validators.required ],\n      business_name: ['', Validators.required ],\n      business_gst_number: ['', Validators.required ]\n    });\n  }\n\n  addBusiness(person_name, busines_name, business_gst_number) {\n    this.bs.addBusiness(person_name, busines_name, business_gst_number);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dzdC1lZGl0L2dzdC1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Person Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"person_name\\\" #person_name [(ngModel)] = \\\"business.person_name\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['person_name'].invalid && (angForm.controls['person_name'].dirty || angForm.controls['person_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['person_name'].errors.required\\\">\\n          Person Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Business Name </label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"business_name\\\" #business_name [(ngModel)] = \\\"business.business_name\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['business_name'].invalid && (angForm.controls['business_name'].dirty || angForm.controls['business_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['business_name'].errors.required\\\">\\n          Person Business is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Business GST Number </label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"business_gst_number\\\" #business_gst_number [(ngModel)] = \\\"business.business_gst_number\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['business_gst_number'].invalid && (angForm.controls['business_gst_number'].dirty || angForm.controls['business_gst_number'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['business_gst_number'].errors.required\\\">\\n          Business GST Number is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"updateBusiness(person_name.value, business_name.value, business_gst_number.value)\\\"\\n        [disabled]=\\\"angForm.invalid\\\" \\n        class=\\\"btn btn-primary\\\">Update Business</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BusinessService } from '../business.service';\n\n@Component({\n  selector: 'app-gst-edit',\n  templateUrl: './gst-edit.component.html',\n  styleUrls: ['./gst-edit.component.css']\n})\nexport class GstEditComponent implements OnInit {\n\n  angForm: FormGroup;\n  business: any = {};\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private bs: BusinessService,\n    private fb: FormBuilder) {\n      this.createForm();\n     }\n\n  createForm() {\n    this.angForm = this.fb.group({\n        person_name: ['', Validators.required ],\n        business_name: ['', Validators.required ],\n        business_gst_number: ['', Validators.required ]\n      });\n    }\n\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.bs.editBusiness(params['id']).subscribe(res => {\n        this.business = res;\n      });\n    });\n  }\n\n  updateBusiness(person_name, business_name, business_gst_number) {\n   this.route.params.subscribe(params => {\n      this.bs.updateBusiness(person_name, business_name, business_gst_number, params['id']);\n      this.router.navigate(['business']);\n   });\n}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dzdC1nZXQvZ3N0LWdldC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n      <td>Person Name</td>\\n      <td>Business Name</td>\\n      <td>GST Number</td>\\n      <td colspan=\\\"2\\\">Actions</td>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n      <tr *ngFor=\\\"let business of businesses\\\">\\n          <td>{{ business.person_name }}</td>\\n          <td>{{ business.business_name }}</td>\\n          <td>{{ business.business_gst_number }}</td>\\n          <td><a [routerLink]=\\\"['edit', business._id]\\\" class=\\\"btn btn-primary\\\">Edit</a></td>\\n          <td><a (click) = \\\"deleteBusiness(business._id)\\\" class=\\\"btn btn-danger\\\">Delete</a></td>\\n      </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport Business from '../Business';\nimport { BusinessService } from '../business.service';\n\n@Component({\n  selector: 'app-gst-get',\n  templateUrl: './gst-get.component.html',\n  styleUrls: ['./gst-get.component.css']\n})\nexport class GstGetComponent implements OnInit {\n\n  businesses: Business[];\n\n  constructor(private bs: BusinessService) { }\n\n  ngOnInit() {\n    this.bs\n      .getBusinesses()\n      .subscribe((data: Business[]) => {\n        this.businesses = data;\n    });\n  }\n\n  deleteBusiness(id) {\n    this.bs.deleteBusiness(id).subscribe(res => {\n      console.log('Deleted');\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}